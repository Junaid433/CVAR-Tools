name: Build Executables and Release

on: [push, pull_request]

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.13]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: |
          pyinstaller --clean --onefile --windowed main.py

      - name: Prepare artifact
        run: mkdir dist-release
      - run: copy dist\main.exe dist-release\CVARTool-windows-${{ matrix.python-version }}.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-exe-${{ matrix.python-version }}
          path: dist-release/*.exe

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.13]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies and build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: |
          pyinstaller --clean --onefile --windowed main.py

      - name: Prepare artifact
        run: mkdir dist-release
      - run: cp dist/main dist-release/CVARTool-linux-${{ matrix.python-version }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-bin-${{ matrix.python-version }}
          path: dist-release/main

  release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-exe-3.13
          path: dist-release

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-bin-3.13
          path: dist-release

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload executables to Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist-release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
